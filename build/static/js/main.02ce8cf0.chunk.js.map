{"version":3,"sources":["components/workers/WorkerRow/WorkerRow.js","components/workers/WorkersList/WorkersList.js","services/workersService.js","store/actions/actionsWorkers/workers.js","store/actions/actionsWorkers/actionTypes.js","services/citiesService.js","shared/components/CitiesAutocomplete.js","hooks/useSearchStarwarsHero.js","components/BabysitterActionsBtns/SearchBabysitter.js","constans/typeOfSearchJob.js","pages/workers/WorkersPage/WorkersPage.js","pages/Home/Home.js","pages/workers/WorkerDetails/WorkerDetails.js","App.js","serviceWorker.js","store/reducers/workers/workers.js","index.js","components/workers/WorkerRow/WorkerRow.module.scss","pages/Home/Home.module.scss","pages/workers/WorkersPage/WorkersPage.module.scss","components/BabysitterActionsBtns/SearchBabysitter.module.scss"],"names":["withRouter","props","history","useHistory","location","useLocation","goToDetails","push","pathname","worker","_id","Card","classes","root","styles","card","CardContent","className","cardContent","personalInfoRight","onClick","mainimgPerson","src","personalDetailsRight","personalInfoLeft","mySelfDescBox","workDays","CardActions","cardActions","Button","variant","size","WorkersList","workersList","map","key","getWorkers","cityId","a","axios","post","_loadWorkersSuccess","data","type","payload","getCities","term","name","getCitiesSearch","text","abortSignal","console","log","CitiesAutocomplete","React","useState","open","setOpen","options","setOptions","loading","length","searchFunc","inputText","setInputText","debouncedSearch","useConstant","AwesomeDebouncePromise","search","useAsync","useSearch","useEffect","styleAutocomplete","Autocomplete","id","inputValue","style","width","onInputChange","ev","val","setTextValue","onChange","setSelectedCity","onOpen","onClose","getOptionSelected","option","value","getOptionLabel","result","renderInput","params","TextField","autoFocus","placeholder","fullWidth","InputProps","endAdornment","Fragment","CircularProgress","color","jobType","setJobType","selectedCity","textValue","useCallback","handlerTypeOptionSearch","handleClickOpen","container","Dialog","DialogTitle","DialogContent","disabled","WorkersPage","workers","useSelector","state","workersReducer","isLoading","dispatch","useDispatch","useParams","containerSpinner","thickness","Home","main","WorkerDetails","App","path","exact","component","WorkerDetailsPage","Boolean","window","hostname","match","initialState","error","reducer","action","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"0PAmEeA,eAzDG,SAACC,GAEf,IAAMC,EAAUC,cACVC,EAAWC,cAEXC,EAAc,WAChBJ,EAAQK,KAAR,UAAgBH,EAASI,SAAzB,YAAqCP,EAAMQ,OAAOC,OAGtD,OACI,kBAACC,EAAA,EAAD,CAAMC,QAAS,CAAEC,KAAMC,IAAOC,OAC1B,kBAACC,EAAA,EAAD,CAAaC,UAAU,OAAOL,QAAS,CAAEC,KAAMC,IAAOI,cAClD,yBAAKD,UAAWH,IAAOK,mBACnB,yBAAKC,QAASd,EAAaW,UAAWH,IAAOO,cAAeC,IAAI,qEAChE,yBAAKL,UAAWH,IAAOS,sBACnB,6BACI,0BAAMN,UAAU,gBAAhB,wCACA,wEAEJ,6BACI,0BAAMA,UAAU,gBAAhB,2BACA,qCAEJ,6BACI,0BAAMA,UAAU,gBAAhB,sEACA,wEAEJ,6BACI,0BAAMA,UAAU,gBAAhB,6CACA,+DAIZ,yBAAKA,UAAWH,IAAOU,kBACnB,6BACI,0BAAMP,UAAU,gBAAhB,wFACA,yIAEJ,yBAAKA,UAAWH,IAAOW,eACnB,8BAAM,0BAAMR,UAAU,gBAAhB,6DAAN,okBAKJ,yBAAKA,UAAWH,IAAOY,UACnB,0BAAMT,UAAU,gBAAhB,2DACA,+MAIZ,kBAACU,EAAA,EAAD,CAAaf,QAAS,CAAEC,KAAMC,IAAOc,cACjC,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYV,QAASd,EAAayB,KAAK,SAAvD,8CC1DHC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC1B,OACI,oCACKA,EAAYC,KAAI,SAACzB,GAAD,OACb,kBAAC,EAAD,CAAW0B,IAAK1B,EAAOC,IAAKD,OAAQA,S,0CCDvC2B,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACTC,IAAMC,KALjB,WAKmC,CAAEH,WADjB,mFAAH,sDCGjBI,EAAsB,SAACC,GACzB,MAAO,CACHC,KCV4B,uBDW5BC,QAASF,I,qGEPJG,EAAS,uCAAG,WAAOC,GAAP,SAAAR,EAAA,sEACRC,IAAMC,KAJjB,UAIkC,CAAEO,KAAMD,IADvB,mFAAH,sD,ykBCEtB,IAAME,EAAe,uCAAG,WAAOC,EAAMC,GAAb,iBAAAZ,EAAA,+EAEGO,EAAUI,GAFb,uBAEZP,EAFY,EAEZA,KAFY,kBAGbA,GAHa,gCAKpBS,QAAQC,IAAI,IAAZ,MALoB,yDAAH,wDAURC,EAAqB,SAACpD,GAAW,IAAD,EACnBqD,IAAMC,UAAS,GADI,mBACpCC,EADoC,KAC9BC,EAD8B,OAEbH,IAAMC,SAAS,IAFF,mBAEpCG,EAFoC,KAE3BC,EAF2B,KAGrCC,EAAUJ,GAA2B,IAAnBE,EAAQG,OAHW,ECXpB,SAACC,GAAe,MAEHP,mBAAS,IAFN,mBAE9BQ,EAF8B,KAEnBC,EAFmB,KAK/BC,EAAkBC,aAAY,kBAChCC,YAAuBL,EAAY,QAGjCM,EAASC,mBAAQ,sBACnB,sBAAA/B,EAAA,yDAC6B,IAArByB,EAAUF,OADlB,yCAEe,IAFf,gCAIeI,EAAgBF,IAJ/B,2CAQA,CAACA,IAIL,MAAO,CACHA,YACAC,eACAI,UDVsCE,CAAUtB,GAA9Ce,EAJmC,EAInCA,UAAWC,EAJwB,EAIxBA,aAAcI,EAJU,EAIVA,OAGjCG,qBAAU,WAER,GAAKX,EAGL,OAAO,YACI,KAEV,CAACA,IAGJW,qBAAU,WACHf,GACHG,EAAW,MAEZ,CAACH,IAWJ,OACE,yBAAKvC,UAAWhB,EAAMuE,mBACpB,kBAACC,EAAA,EAAD,CACEC,GAAG,oBACHC,WAAYZ,EACZa,MAAO,CAAEC,MAAO,QAChBC,cAXoB,SAACC,EAAIC,GAC7BhB,EAAagB,GACb/E,EAAMgF,aAAaD,IAUfxB,KAAMA,EACN0B,SAjBwB,SAACH,EAAIC,GACjC/E,EAAMkF,gBAAgBH,IAiBlBI,OAAQ,WACN3B,GAAQ,IAEV4B,QAAS,WACP5B,GAAQ,IAEV6B,kBAAmB,SAACC,EAAQC,GAAT,OAAmBD,EAAOxC,OAASyC,EAAMzC,MAC5D0C,eAAgB,SAAAF,GAAM,OAAIA,EAAOxC,MACjCW,QAASU,EAAOsB,OAChB9B,QAASA,EACT+B,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,eACEC,WAAS,EACTC,YAAY,+DACRH,EAHN,CAIEI,WAAS,EACTlE,QAAQ,WACRmE,WAAU,KACLL,EAAOK,WADF,CAERC,aACE,kBAAC,IAAMC,SAAP,KACGvC,EAAU,kBAACwC,EAAA,EAAD,CAAkBC,MAAM,UAAUtE,KAAM,KAAS,KAC3D6D,EAAOK,WAAWC,wB,2BEftBlG,eAxDe,WAAO,IAAD,EACFuD,mBAAS,IADP,mBACzB+C,EADyB,KAChBC,EADgB,OAERhD,oBAAS,GAFD,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGQF,qBAHR,mBAGzBiD,EAHyB,KAGXrB,EAHW,OAIE5B,mBAAS,IAJX,mBAIzBkD,EAJyB,KAIdxB,EAJc,KAM1B/E,EAAUC,cAEViE,EAASsC,uBAAY,WClBE,sBDmBrBJ,GACApG,EAAQK,KAAR,mBAAyBiG,EAAa9F,QAE3C,CAACR,EAASoG,EAASE,IAEhBG,EAA0B,SAAChE,GAC7B4D,EAAW5D,GACXiE,KAGEA,EAAkB,WACpBnD,GAAQ,IASZ,OACI,oCACI,yBAAKxC,UAAS,sCAAiCH,IAAO+F,YAClD,kBAAChF,EAAA,EAAD,CAAQC,QAAQ,YAAYuE,MAAM,UAAUjF,QAAS,kBAAMuF,EC1C1C,uBD0CjB,0FAGA,kBAAC9E,EAAA,EAAD,CAAQC,QAAQ,YAAYuE,MAAM,UAAUjF,QAAS,kBAAMuF,EC5CtC,2BD4CrB,mJAIJ,kBAACG,EAAA,EAAD,CAAQtD,KAAMA,EAAM6B,QAhBR,WAChB5B,GAAQ,GACR0B,EAAgB,OAc8Ba,WAAW,GACjD,kBAACe,EAAA,EAAD,CAAarC,GAAG,qBAAhB,iEACA,kBAACsC,EAAA,EAAD,CAAe/F,UAAU,iCACrB,kBAAC,EAAD,CACIkE,gBAAiBA,EACjBF,aAAcA,EACdT,kBAAkB,6BACtB,kBAAC3C,EAAA,EAAD,CAAQT,QAASgD,EAAQtC,QAAQ,YAAYuE,MAAM,UAAUY,UAAWT,GAAgBC,IAAcD,EAAazD,MAAnH,wCE/CPmE,EAAc,WACvB,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAeH,WACpDI,EAAYH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAeC,aACtDC,EAAWC,cACb7B,EAAS8B,cASb,OARAnD,qBAAU,WPSa,IAAClC,EORpBmF,GPQoBnF,EORSuD,EAAOvD,OPQjB,uCAAY,WAAOmF,GAAP,iBAAAlF,EAAA,6DACnCkF,EApBO,CACH7E,KCLoB,iBDuBW,kBAGRP,EAAWC,GAHH,gBAGvBK,EAHuB,EAGvBA,KACR8E,EAAS/E,EAAoBC,IAJE,gDAM/BS,QAAQC,IAAR,MACAoE,EAbG,CACH7E,KChByB,oBDiBzBC,QAW0B,EAAD,KAPM,yDAAZ,0DOPpB,CAAC4E,EAAU5B,IAEdrB,qBAAU,cAEP,IAGC,oCACKgD,EACG,yBAAKtG,UAAWH,IAAO6G,kBAAkB,kBAACvB,EAAA,EAAD,CAAkBwB,UAAW,IAAK7F,KAAM,MAC/E,yBAAKd,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAagB,YAAakF,O,iBCxBjCU,EAAO,WAChB,OACI,iCACI,yBAAK5G,UAAWH,IAAO+F,WACnB,yBAAK5F,UAAS,UAAKH,IAAOgH,KAAZ,iCACV,6BACI,+KACA,8HACA,oOAGR,6BACI,kBAAC,EAAD,UCNLC,EARO,WAClB,OACI,+BCiBOC,EAdH,WACV,OACE,iCACE,4BAAQ/G,UAAU,cAChB,8BACA,2LAEF,kBAAC,IAAD,CAAOgH,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,KAAK,mBAAmBC,OAAK,EAACC,UAAWjB,IAChD,kBAAC,IAAD,CAAOe,KAAK,4BAA4BC,OAAK,EAACC,UAAWC,MCJ3CC,QACW,cAA7BC,OAAOlI,SAASmI,UAEe,UAA7BD,OAAOlI,SAASmI,UAEhBD,OAAOlI,SAASmI,SAASC,MACvB,2D,8lBCjBN,IAAMC,GAAe,CACjBtB,QAAS,GACTI,WAAW,EACXmB,MAAO,MA4BIC,GAxBC,WAAmC,IAAlCtB,EAAiC,uDAAzBoB,GAAcG,EAAW,uCAC9C,OAAQA,EAAOjG,MACX,IXVoB,eWWhB,OAAO,MACA0E,EADP,CAEIE,WAAW,IAEnB,IXd4B,uBWexB,OAAO,MACAF,EADP,CAEIF,QAASyB,EAAOhG,QAChB2E,WAAW,IAEnB,IXnByB,oBWoBrB,OAAO,MACAF,EADP,CAEIE,WAAW,EACXmB,MAAOE,EAAOhG,UAEtB,QACI,OAAOyE,I,SCjBbwB,GAAcC,YAAgB,CAChCxB,oBAGEyB,GAAmBT,OAAOU,sCAAwCC,IAElEC,GAAQC,YAAYN,GAAaE,GAAiBK,YAAgBC,QAExEC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,IAC7B,kBAAC,IAAD,KAAQ,kBAAC,EAAD,QACCM,SAASC,eAAe,SF4G/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBGlInBC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,kBAAoB,qCAAqC,qBAAuB,wCAAwC,YAAc,+BAA+B,iBAAmB,oCAAoC,cAAgB,iCAAiC,SAAW,4BAA4B,YAAc,iC,mBCAnXD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,qB,mBCA7DD,EAAOC,QAAU,CAAC,iBAAmB,wC,mBCArCD,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.02ce8cf0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './WorkerRow.module.scss'\r\nimport { withRouter, useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst WorkerRow = (props) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const goToDetails = () => {\r\n        history.push(`${location.pathname}/${props.worker._id}`)\r\n    };\r\n\r\n    return (\r\n        <Card classes={{ root: styles.card }}>\r\n            <CardContent className=\"flex\" classes={{ root: styles.cardContent }}>\r\n                <div className={styles.personalInfoRight}>\r\n                    <img onClick={goToDetails} className={styles.mainimgPerson} src=\"http://tecnosisweb.com.br/assets/pages/img/people/img3-large.jpg\" />\r\n                    <div className={styles.personalDetailsRight}>\r\n                        <div>\r\n                            <span className=\"text-opacity\">שם מלא:&nbsp;</span>\r\n                            <span>רמי לוי</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-opacity\">גיל:&nbsp;</span>\r\n                            <span>35</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-opacity\">מקום מגורים:&nbsp;</span>\r\n                            <span>באר שבע</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-opacity\">ניסיון:&nbsp;</span>\r\n                            <span>4 שנים</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.personalInfoLeft}>\r\n                    <div>\r\n                        <span className=\"text-opacity\">גילאים מועדפים:&nbsp;</span>\r\n                        <span>תינוקות מגילאים 0 עד 2</span>\r\n                    </div>\r\n                    <div className={styles.mySelfDescBox}>\r\n                        <span><span className=\"text-opacity\">קצת על עצמי:</span> Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\r\n                            unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\r\n                             and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</span>\r\n                    </div>\r\n                    <div className={styles.workDays}>\r\n                        <span className=\"text-opacity\">ימי עבודה: &nbsp;</span>\r\n                        <span>ראשון &#8226; שני &#8226; שלישי &#8226; רביעי &#8226; חמישי</span>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions classes={{ root: styles.cardActions }}>\r\n                <Button variant=\"contained\" onClick={goToDetails} size=\"small\">קרא עוד</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default withRouter(WorkerRow);","import React from 'react'\r\nimport WorkerRow from '../WorkerRow/WorkerRow'\r\n\r\nexport const WorkersList = ({ workersList }) => {\r\n    return (\r\n        <>\r\n            {workersList.map((worker) => (\r\n                <WorkerRow key={worker._id} worker={worker} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nconst WORKERS_URL = (process.env.NODE_ENV !== 'development')\r\n    ? '/workers'\r\n    : '//localhost:8080/workers';\r\n\r\n\r\nexport const getWorkers = async (cityId) => {\r\n    return await axios.post(WORKERS_URL, { cityId })\r\n};\r\n\r\n","import { getWorkers } from '../../../services/workersService';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst _loadWorkers = () => {\r\n    return {\r\n        type: actionTypes.LOAD_WORKERS,\r\n    }\r\n}\r\n\r\nconst _loadWorkersSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.LOAD_WORKERS_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst _loadWorkersFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOAD_WORKERS_FAIL,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const loadWorkers = (cityId) => async (dispatch) => {\r\n    dispatch(_loadWorkers())\r\n    try {\r\n        const { data } = await getWorkers(cityId);\r\n        dispatch(_loadWorkersSuccess(data))\r\n    } catch (e) {\r\n        console.log(e);\r\n        dispatch(_loadWorkersFail(e))\r\n    }\r\n};","export const LOAD_WORKERS = 'LOAD_WORKERS';\r\nexport const LOAD_WORKERS_SUCCESS = 'LOAD_WORKERS_SUCCESS';\r\nexport const LOAD_WORKERS_FAIL = 'LOAD_WORKERS_FAIL';","import axios from 'axios';\r\nconst CITIES_URL = (process.env.NODE_ENV !== 'development')\r\n    ? '/cities'\r\n    : '//localhost:8080/cities';\r\n\r\nexport const getCities = async (term) => {\r\n    return await axios.post(CITIES_URL, { name: term })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useSearch } from '../../hooks/useSearchStarwarsHero';\r\nimport { getCities } from '../../services/citiesService';\r\n// get cities for autocomplete\r\nconst getCitiesSearch = async (text, abortSignal) => {\r\n  try {\r\n    const { data } = await getCities(text);\r\n    return data;\r\n  } catch (e) {\r\n    console.log('e', e);\r\n  }\r\n};\r\n\r\n\r\nexport const CitiesAutocomplete = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n  const { inputText, setInputText, search } = useSearch(getCitiesSearch);\r\n\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  const handlerSelecetdOption = (ev, val) => {\r\n    props.setSelectedCity(val)\r\n  };\r\n\r\n  const handleValueChange = (ev, val) => {\r\n    setInputText(val);\r\n    props.setTextValue(val)\r\n  };\r\n\r\n  return (\r\n    <div className={props.styleAutocomplete}>\r\n      <Autocomplete\r\n        id=\"asynchronous-demo\"\r\n        inputValue={inputText}\r\n        style={{ width: '100%' }}\r\n        onInputChange={handleValueChange}\r\n        open={open}\r\n        onChange={handlerSelecetdOption}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={option => option.name}\r\n        options={search.result}\r\n        loading={loading}\r\n        renderInput={params => (\r\n          <TextField\r\n            autoFocus\r\n            placeholder=\"הקלד שם עיר...\"\r\n            {...params}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <React.Fragment>\r\n                  {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                  {params.InputProps.endAdornment}\r\n                </React.Fragment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}","import AwesomeDebouncePromise from 'awesome-debounce-promise';\r\nimport useConstant from 'use-constant';\r\nimport { useAsync } from 'react-async-hook';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useSearch = (searchFunc) => {\r\n    // Handle the input text state\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    // Debounce the original search async function\r\n    const debouncedSearch = useConstant(() =>\r\n        AwesomeDebouncePromise(searchFunc, 300)\r\n    );\r\n\r\n    const search = useAsync(\r\n        async () => {\r\n            if (inputText.length === 0) {\r\n                return [];\r\n            } else {\r\n                return debouncedSearch(inputText);\r\n            }\r\n        },\r\n        // Ensure a new request is made everytime the text changes (even if it's debounced)\r\n        [inputText]\r\n    );\r\n\r\n    // Return everything needed for the hook consumer\r\n    return {\r\n        inputText,\r\n        setInputText,\r\n        search,\r\n    };\r\n};","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './SearchBabysitter.module.scss'\r\nimport { CitiesAutocomplete } from '../../shared/components/CitiesAutocomplete';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { SEARCH_BABYSITTER, SEARCH_BABYSITTER_JOB } from '../../constans/typeOfSearchJob';\r\n\r\nconst BabysitterActionsBtns = () => {\r\n    const [jobType, setJobType] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedCity, setSelectedCity] = useState();\r\n    const [textValue, setTextValue] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const search = useCallback(() => {\r\n        if (jobType === SEARCH_BABYSITTER) {\r\n            history.push(`/workers/${selectedCity._id}`)\r\n        };\r\n    }, [history, jobType, selectedCity]);\r\n\r\n    const handlerTypeOptionSearch = (type) => {\r\n        setJobType(type);\r\n        handleClickOpen()\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setSelectedCity(null)\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`flex justify-content-center ${styles.container}`}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handlerTypeOptionSearch(SEARCH_BABYSITTER)}>\r\n                    מחפש/ת בייביסיטר\r\n            </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => handlerTypeOptionSearch(SEARCH_BABYSITTER_JOB)}>\r\n                    מחפש/ת עבודה בתור בייביסיטר\r\n            </Button>\r\n            </div>\r\n            <Dialog open={open} onClose={handleClose} fullWidth={true}>\r\n                <DialogTitle id=\"form-dialog-title\">ערים לבחירה</DialogTitle>\r\n                <DialogContent className=\"flex space-between full-width\">\r\n                    <CitiesAutocomplete\r\n                        setSelectedCity={setSelectedCity}\r\n                        setTextValue={setTextValue}\r\n                        styleAutocomplete=\"autocmplete-style-dialog\" />\r\n                    <Button onClick={search} variant=\"contained\" color=\"primary\" disabled={!selectedCity || textValue !== selectedCity.name}>\r\n                        חיפוש\r\n                    </Button>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withRouter(BabysitterActionsBtns);","export const SEARCH_BABYSITTER = 'SEARCH_BABYSITTER';\r\nexport const SEARCH_BABYSITTER_JOB = 'SEARCH_BABYSITTER_JOB';","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { WorkersList } from '../../../components/workers/WorkersList/WorkersList';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { useParams } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport styles from './WorkersPage.module.scss';\r\nimport BabysitterActionsBtns from '../../../components/BabysitterActionsBtns/SearchBabysitter';\r\n\r\nexport const WorkersPage = () => {\r\n    const workers = useSelector(state => state.workersReducer.workers);\r\n    const isLoading = useSelector(state => state.workersReducer.isLoading);\r\n    const dispatch = useDispatch();\r\n    let params = useParams();\r\n    useEffect(() => {\r\n        dispatch(actions.loadWorkers(params.cityId))\r\n    }, [dispatch, params])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoading ?\r\n                <div className={styles.containerSpinner}><CircularProgress thickness={6.5} size={50} /></div>\r\n                : <div className=\"container\">\r\n                    <BabysitterActionsBtns />\r\n                    <WorkersList workersList={workers} />\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport BabysitterActionsBtns from '../../components/BabysitterActionsBtns/SearchBabysitter';\r\nimport styles from './Home.module.scss';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <section>\r\n            <div className={styles.container}>\r\n                <div className={`${styles.main} flex justify-content-center`}>\r\n                    <div>\r\n                        <h2>נמאס לכם כבר לחפש בייביסיטר?</h2>\r\n                        <div>הגעתם למקום הנכון!</div>\r\n                        <div>כאן יהיה מרוכז כל המשרות לפי העיר שלכם</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <BabysitterActionsBtns />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst WorkerDetails = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkerDetails\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route } from 'react-router-dom';\r\nimport { WorkersPage } from './pages/workers/WorkersPage/WorkersPage';\r\nimport { Home } from './pages/Home/Home';\r\nimport WorkerDetailsPage from './pages/workers/WorkerDetails/WorkerDetails';\r\n\r\nconst App = () => {\r\n  return (\r\n    <section>\r\n      <header className=\"navbar-app\">\r\n        <div></div>\r\n        <div>מאגר הבייביסיטר הגדול בישראל</div>\r\n      </header>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/workers/:cityId\" exact component={WorkersPage} />\r\n      <Route path=\"workers/:cityId/:workerId\" exact component={WorkerDetailsPage} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../../actions/actionsWorkers/actionTypes';\r\nconst initialState = {\r\n    workers: [],\r\n    isLoading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_WORKERS:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case actionTypes.LOAD_WORKERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                workers: action.payload,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.LOAD_WORKERS_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport workersReducer from './store/reducers/workers/workers';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    workersReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}>\n    <Router><App /></Router>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"WorkerRow_card__2wpkw\",\"personalInfoRight\":\"WorkerRow_personalInfoRight__23CW4\",\"personalDetailsRight\":\"WorkerRow_personalDetailsRight__1HAJE\",\"cardContent\":\"WorkerRow_cardContent__1GxiV\",\"personalInfoLeft\":\"WorkerRow_personalInfoLeft__1-g11\",\"mySelfDescBox\":\"WorkerRow_mySelfDescBox__2OTGv\",\"workDays\":\"WorkerRow_workDays__1n_UR\",\"cardActions\":\"WorkerRow_cardActions__xEBTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__1AU0U\",\"main\":\"Home_main__3t5Ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSpinner\":\"WorkersPage_containerSpinner__2Dox6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBabysitter_container__8Oh9h\"};"],"sourceRoot":""}